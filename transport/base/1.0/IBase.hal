/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.hidl.base@1.0;

/*
 * The ancestor for all interfaces.
 *
 * All HAL files will have this interface implicitly imported. If an interface
 * does not explicitly extend from another interface, it will implicitly extend
 * from IBase. (This is like java.lang.Object in Java.)
 *
 * Methods defined here are shared by all interfaces (this is like
 * java.lang.Object.notify(), for example.) However, the behavior of these
 * functions cannot be overridden.
 */
interface IBase {

    /*
     * Provides run-time type information for this object.
     * For example, for the following interface definition:
     *     package android.hardware.foo@1.0;
     *     interface IParent {};
     *     interface IChild {};
     * Calling interfaceChain on an IChild object will yield the following:
     *     ["android.hardware.foo@1.0::IChild",
     *      "android.hardware.foo@1.0::IParent"
     *      "android.hidl.base@1.0::IBase"]
     *
     * @return indicator a vector of descriptors of the run-time type of the
     *         object.
     */
    interfaceChain() generates (vec<string> indicator);

    /*
     * This method notifies the interface that one or more system properties
     * have changed. The default implementation calls
     * (C++)  report_sysprop_change() in libcutils or
     * (Java) android.os.SystemProperties.reportSyspropChanged,
     * which in turn calls a set of registered callbacks (eg to update trace
     * tags).
     */
    oneway notifySyspropsChanged();
};
