// Copyright (C) 2016 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

subdirs = [
    "test",
]

genrule {
    name: "android.hidl.manager@1.0_genc++",
    tool: "hidl-gen",
    cmd: "$tool -o $genDir -Lc++ -randroid.hidl:system/libhidl android.hidl.manager@1.0",
    srcs: [
        "manager/1.0/IServiceManager.hal",
    ],
    out: [
        "android/hidl/manager/1.0/ServiceManagerAll.cpp",
    ],
}

genrule {
    name: "android.hidl.manager@1.0_genc++_headers",
    tool: "hidl-gen",
    cmd: "$tool -o $genDir -Lc++ -randroid.hidl:system/libhidl android.hidl.manager@1.0",
    srcs: [
        "manager/1.0/IServiceManager.hal",
    ],
    out: [
        "android/hidl/manager/1.0/IServiceManager.h",
        "android/hidl/manager/1.0/IHwServiceManager.h",
        "android/hidl/manager/1.0/BnServiceManager.h",
        "android/hidl/manager/1.0/BpServiceManager.h",
        "android/hidl/manager/1.0/BsServiceManager.h",
    ],
}

cc_library_shared {
    name: "libhidl",
    shared_libs: [
        "libbase",
        "liblog",
        "libutils",
        "libhwbinder",
        "libcutils",
    ],
    export_shared_lib_headers: [
        "libbase",
        "libutils",
    ],
    local_include_dirs: ["include"],
    export_include_dirs: ["include"],

    clang: true,
    sanitize: {
        misc_undefined: ["integer"],
    },

    generated_sources: ["android.hidl.manager@1.0_genc++"],
    generated_headers: ["android.hidl.manager@1.0_genc++_headers"],
    export_generated_headers: ["android.hidl.manager@1.0_genc++_headers"],

    srcs: [
        "HidlSupport.cpp",
        "ServiceManagement.cpp",
        "Static.cpp",
        "Status.cpp",
        "TaskRunner.cpp",
    ],

    product_variables: {
        debuggable: {
            cflags: ["-DLIBHIDL_TARGET_DEBUGGABLE"],
        },
    },
}
